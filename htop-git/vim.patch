diff --git a/Action.c b/Action.c
index 6c387de..e28f7db 100644
--- a/Action.c
+++ b/Action.c
@@ -501,52 +501,29 @@ static Htop_Reaction actionTagAllChildren(State* st) {
 
 void Action_setBindings(Htop_Action* keys) {
    keys[KEY_RESIZE] = actionResize;
-   keys['M'] = actionSortByMemory;
-   keys['T'] = actionSortByTime;
-   keys['P'] = actionSortByCPU;
    keys['H'] = actionToggleUserlandThreads;
    keys['K'] = actionToggleKernelThreads;
-   keys['p'] = actionToggleProgramPath;
-   keys['t'] = actionToggleTreeView;
-   keys[KEY_F(5)] = actionToggleTreeView;
-   keys[KEY_F(4)] = actionIncFilter;
-   keys['\\'] = actionIncFilter;
-   keys[KEY_F(3)] = actionIncSearch;
-   keys['/'] = actionIncSearch;
+   keys['T'] = actionToggleTreeView;
+   keys['/'] = actionIncFilter;
+   keys['f'] = actionIncSearch;
 
    keys[']'] = actionHigherPriority;
-   keys[KEY_F(7)] = actionHigherPriority;
    keys['['] = actionLowerPriority;
-   keys[KEY_F(8)] = actionLowerPriority;
-   keys['I'] = actionInvertSortOrder;
-   keys[KEY_F(6)] = actionExpandCollapseOrSortColumn;
-   keys[KEY_F(18)] = actionExpandCollapseOrSortColumn;
-   keys['<'] = actionSetSortColumn;
-   keys[','] = actionSetSortColumn;
-   keys['>'] = actionSetSortColumn;
-   keys['.'] = actionSetSortColumn;
-   keys[KEY_F(10)] = actionQuit;
+   keys['r'] = actionInvertSortOrder;
    keys['q'] = actionQuit;
    keys['a'] = actionSetAffinity;
-   keys[KEY_F(9)] = actionKill;
    keys['k'] = actionKill;
-   keys[KEY_RECLICK] = actionExpandOrCollapse;
    keys['+'] = actionExpandOrCollapse;
    keys['='] = actionExpandOrCollapse;
    keys['-'] = actionExpandOrCollapse;
-   keys['u'] = actionFilterByUser;
+   keys['S'] = actionFilterByUser;
    keys['F'] = actionFollow;
-   keys['S'] = actionSetup;
-   keys['C'] = actionSetup;
    keys[KEY_F(2)] = actionSetup;
    keys['l'] = actionLsof;
    keys['s'] = actionStrace;
    keys[' '] = actionTag;
    keys['\014'] = actionRedraw; // Ctrl+L
    keys[KEY_F(1)] = actionHelp;
-   keys['h'] = actionHelp;
-   keys['?'] = actionHelp;
-   keys['U'] = actionUntagAll;
-   keys['c'] = actionTagAllChildren;
+   keys['x'] = actionUntagAll;
+   keys['v'] = actionTagAllChildren;
 }
-
diff --git a/CategoriesPanel.c b/CategoriesPanel.c
index d67be86..46e04bc 100644
--- a/CategoriesPanel.c
+++ b/CategoriesPanel.c
@@ -82,13 +82,13 @@ static HandlerResult CategoriesPanel_eventHandler(Panel* super, int ch) {
          result = HANDLED;
          break;
       case KEY_UP:
-      case KEY_CTRLP:
       case KEY_DOWN:
-      case KEY_CTRLN:
-      case KEY_NPAGE:
-      case KEY_PPAGE:
-      case KEY_HOME:
-      case KEY_END: {
+      case 'u':
+      case 'e':
+      case 'E':
+      case 'U':
+      case 'g':
+      case 'G': {
          int previous = selected;
          Panel_onKey(super, ch);
          selected = Panel_getSelectedIndex(super);
diff --git a/Panel.c b/Panel.c
index 7424fa4..f5caf3d 100644
--- a/Panel.c
+++ b/Panel.c
@@ -376,41 +376,31 @@ bool Panel_onKey(Panel* this, int key) {
    int size = Vector_size(this->items);
    switch (key) {
    case KEY_DOWN:
-   case KEY_CTRLN:
+   case 'e':
       this->selected++;
       break;
    case KEY_UP:
-   case KEY_CTRLP:
+   case 'u':
       this->selected--;
       break;
-   #ifdef KEY_C_DOWN
-   case KEY_C_DOWN:
-      this->selected++;
-      break;
-   #endif
-   #ifdef KEY_C_UP
-   case KEY_C_UP:
-      this->selected--;
-      break;
-   #endif
    case KEY_LEFT:
-   case KEY_CTRLB:
+   case 'h':
       if (this->scrollH > 0) {
          this->scrollH -= CRT_scrollHAmount;
          this->needsRedraw = true;
       }
       break;
    case KEY_RIGHT:
-   case KEY_CTRLF:
+   case 't':
       this->scrollH += CRT_scrollHAmount;
       this->needsRedraw = true;
       break;
-   case KEY_PPAGE:
+   case 'U':
       this->selected -= (this->h - 1);
       this->scrollV -= (this->h - 1);
       this->needsRedraw = true;
       break;
-   case KEY_NPAGE:
+   case 'E':
       this->selected += (this->h - 1);
       this->scrollV += (this->h - 1);
       this->needsRedraw = true;
@@ -430,10 +420,10 @@ bool Panel_onKey(Panel* this, int key) {
       this->needsRedraw = true;
       break;
    }
-   case KEY_HOME:
+   case 'g':
       this->selected = 0;
       break;
-   case KEY_END:
+   case 'G':
       this->selected = size - 1;
       break;
    default:
