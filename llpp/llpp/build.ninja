cc = gcc
include .config
ocamlc = ocamlc.opt
ocamlflags = -warn-error +a -w +a -g -safe-string
libs = -lmupdf $mujs -lpthread -L$mupdf/build/$buildtype

cflags = $cflags -Wall -Werror -I$mupdf/include -I$freetype -g $
       -std=c99 -pedantic-errors -Wunused-parameter -Wsign-compare -Wshadow

rule cc
     deps = gcc
     depfile = $out.d
     command = $ocamlc -cc "$cc" -ccopt "$cflags -MMD -MF $out.d -o $out" -c $in
     description = cc $out

rule ocamlc
     deps = gcc
     depfile = $out.d
     command = env incs="$incs" pp="$pp" /bin/sh $srcdir/doocaml.sh $
             $ocamlc $out $in -c $ocamlflags
     description = ocamlc $out

rule genhelp
     command = sh $srcdir/mkhelp.sh $srcdir/keystoml.ml $srcdir/KEYS >$out
     description = genhelp

build $builddir/help.ml: genhelp $
      $srcdir/mkhelp.sh $srcdir/keystoml.ml $srcdir/KEYS
build $builddir/link.o: cc $srcdir/link.c
      cflags = $cflags -D_GNU_SOURCE -DOBSCURED_OPT -DFFP
build $builddir/help.cmo: ocamlc $builddir/help.ml
build $builddir/utils.cmo: ocamlc $srcdir/utils.ml
build $builddir/bo.cmo: ocamlc $srcdir/le/bo.ml
build $builddir/wsi.cmi: ocamlc $srcdir/wsi.mli
build $builddir/wsi.cmo: ocamlc $srcdir/wsi.ml $
      | $builddir/bo.cmo $builddir/utils.cmo $builddir/wsi.cmi
build $builddir/parser.cmo: ocamlc $srcdir/parser.ml
build $builddir/config.cmo: ocamlc $srcdir/config.ml $
      | $builddir/wsi.cmi $builddir/utils.cmo $builddir/parser.cmo
      incs = -I +lablGL
build $builddir/main.cmo: ocamlc $srcdir/main.ml $
      | $builddir/wsi.cmi $builddir/utils.cmo $builddir/config.cmo $
        $builddir/help.cmo $srcdir/doocaml.sh
        incs = -I +lablGL
        pp = sed -f $srcdir/pp.sed

cmos = $builddir/help.cmo $
     $builddir/utils.cmo $
     $builddir/parser.cmo $
     $builddir/bo.cmo $
     $builddir/wsi.cmo $
     $builddir/config.cmo $
     $builddir/main.cmo

rule linkso
     command = $cc -o $out -shared $in $libs $lflags
     description = linkso $out

build $builddir/link.so: linkso $builddir/link.o

rule link
     command = $ocamlc -g -o $out -I +lablGL $
             str.cma unix.cma lablgl.cma $cmos $
             $builddir/link.so
     description = link $out

rule linkstatic
     command = $ocamlc -custom -o $out -I +lablGL $
             str.cma unix.cma lablgl.cma $
             $builddir/link.o $
             -cclib "$libs $lflags" $
             $cmos
     description = linkstatic $out

build $builddir/llpp: linkstatic $
      $builddir/link.o $
      $builddir/help.cmo $
      $builddir/utils.cmo $
      $builddir/parser.cmo $
      $builddir/bo.cmo $
      $builddir/wsi.cmo $
      $builddir/config.cmo $
      $builddir/main.cmo

default $builddir/llpp
